######## lab5-1-exam #######
int time_read() {
    int time = 0;
    if (syscall_read_dev((u_int) & time, 0x15000000, 4) < 0)
        user_panic("time_read panic");
    if (syscall_read_dev((u_int) & time, 0x15000010, 4) < 0)
        user_panic("time_read panic");
    return time;
}

void raid0_write(u_int secno, void *src, u_int nsecs) {
    int i;
    for (i = secno; i < secno + nsecs; i++) {
        if (i % 2 == 0) {
            ide_write(1, i / 2, src + (i - secno) * 0x200, 1);
        } else {
            ide_write(2, i / 2, src + (i - secno) * 0x200, 1);
        }
    }
}

void raid0_read(u_int secno, void *dst, u_int nsecs) {
    int i;
    for (i = secno; i < secno + nsecs; i++) {
        if (i % 2 == 0) {
            ide_read(1, i / 2, dst + (i - secno) * 0x200, 1);
        } else {
            ide_read(2, i / 2, dst + (i - secno) * 0x200, 1);
        }
    }
}


######### lab5-1-extra #######  有错误 ××× ############
int raid4_valid(u_int diskno) {
    return !ide_read(diskno, 0, (void *) 0x13004000, 1);
}

#define MAXL (128)

int raid4_write(u_int blockno, void *src) {
    int i;
    int invalid = 0;
    int check[MAXL];
    for (i = 0; i < 8; i++) {
        if (raid4_valid(i % 4 + 1)) {
            ide_write(i % 4 + 1, 2 * blockno + i / 4, src + i * 0x200, 1);
        } else { invalid++; }
    }
    if (!raid4_valid(5)) {
        return invalid / 2 + 1;
    }
    int j, k;
    for (i = 0; i < 2; i++) {
        for (j = 0; j < MAXL; j++) {
            check[j] = 0;
            for (k = 0; k < 4; k++) {
                check[j] ^= *(int *) (src + (4 * i + k) * 0x200 + j * 4);
            }
        }
        ide_write(5, 2 * blockno + i, (void *) check, 1);
    }
    return invalid / 2;
}

int raid4_read(u_int blockno, void *dst) {
    int i;
    int invalid = 0;
    int wrong = 0;
    int check[2 * MAXL];
    for (i = 1; i <= 5; i++) {
        if (!raid4_valid(i)) {
            invalid++;
            wrong = i;
        }
    }
    if (invalid > 1) {
        return invalid;
    }
    for (i = 0; i < 8; i++) {
        if (i % 4 + 1 != wrong) {
            ide_read(i % 4 + 1, 2 * blockno + i / 4, dst + i * 0x200, 1);
        }
    }
    if (wrong == 5) {
        return 1;
    }
    int j, k;
    ide_read(5, 2 * blockno, check, 2);
    for (i = 0; i < 2; i++) {
        for (j = 0; j < MAXL; j++) {
            for (k = 0; k < 4; k++) {
                check[i * MAXL + j] ^= *(int *) (dst + (4 * i + k) * 0x200 + j * 4);
            }
        }
    }
    if (!wrong) {
        for (j = 0; j < 2 * MAXL; j++) {
            if (check[j] != 0) {
                return -1;
            }
        }
        return 0;
    }
    wrong--;
    user_bcopy(check, dst + wrong * 0x200, 0x200);
    user_bcopy((void *) check + 0x200, dst + 0x800 + wrong * 0x200, 0x200);
    return 1;
}